@page "/crypto"

@using BlazorServerConfiguration.Features
@using BlazorServerConfiguration.Models
@inject BlazorServerConfiguration.Services.QuoteService QuoteService
@inject Microsoft.Extensions.Options.IOptions<QuoteOptions> QuoteOptions
@inject Microsoft.FeatureManagement.IFeatureManager FeatureManager

@if (cryptoEnabled)
{
    <h1>Crypto quote</h1>

    <EditForm Model="@quote" OnValidSubmit="@HandleValidSubmitAsync" class="form-inline">
        <div class="form-group mx-sm-3 mb-2">
            <label for="tickerSymbol">Ticker symbol:</label>
            <InputSelect @bind-Value="quote.Symbol" class="form-control" id="tickerSymbol">
                <option value="BTC">BTC</option>
                <option value="DOGE">DOGE</option>
                <option value="ETH">ETH</option>
            </InputSelect>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label for="currencyCode">Currency code:</label>
            <InputSelect @bind-Value="quote.CurrencyCode" class="form-control" id="currencyCode">
                <option value="CAD">CAD</option>
                <option value="EUR">EUR</option>
                <option value="INR">INR</option>
                <option value="USD">USD</option>
            </InputSelect>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label for="regionCode">Region code:</label>
            <InputSelect @bind-Value="quote.RegionCode" class="form-control" id="regionCode">
                <option value="US">US</option>
                <option value="BR">BR</option>
                <option value="AU">AU</option>
                <option value="CA">CA</option>
                <option value="FR">FR</option>
                <option value="DE">DE</option>
                <option value="HK">HK</option>
                <option value="IN">IN</option>
                <option value="IT">IT</option>
                <option value="ES">ES</option>
                <option value="GB">GB</option>
                <option value="SG">SG</option>
            </InputSelect>
        </div>
        <button type="submit" class="btn btn-primary mb-2">Get Quote</button>
    </EditForm>

    <QuoteResult Stats="@stats" />
}
else
{
    <h1>Page unavailable</h1>
}

@code {
    private CryptoQuote? quote;
    private QuoteStats? stats;
    private bool cryptoEnabled;

    private async Task HandleValidSubmitAsync()
    {
        if (quote is not null)
        {
            stats = await QuoteService.GetStatisticsAsync(
                new($"{quote.Symbol}-{quote.CurrencyCode}", quote.RegionCode));
        }
    }

    protected override async Task OnInitializedAsync()
    {
        cryptoEnabled = await FeatureManager.IsEnabledAsync(nameof(Flags.Crypto));

        if (cryptoEnabled && QuoteOptions.Value.CryptoQuote is not null)
        {
            quote = new CryptoQuote
            {
                Symbol = QuoteOptions.Value.CryptoQuote.Symbol,
                CurrencyCode = QuoteOptions.Value.CryptoQuote.CurrencyCode,
                RegionCode = QuoteOptions.Value.CryptoQuote.RegionCode
            };
        }
    }
}

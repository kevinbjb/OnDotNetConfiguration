@page "/stocks"

@using BlazorServerConfiguration.Models
@using System.ComponentModel.DataAnnotations
@inject BlazorServerConfiguration.Services.StockService StockService
@inject Microsoft.Extensions.Options.IOptions<StockOptions> StockOptions

<h1>Stock quote</h1>

<EditForm Model="@quote" OnValidSubmit="@HandleValidSubmitAsync" class="form-inline">
    <div class="form-group mx-sm-3 mb-2">
        <label for="tickerSymbol">Ticker symbol:</label>
        <InputSelect @bind-Value="quote.TickerSymbol" class="form-control" id="tickerSymbol">
            <option value="AMD">AMD</option>
            <option value="GME">GME</option>
            <option value="MSFT">MSFT</option>
        </InputSelect>
    </div>
    <div class="form-group mx-sm-3 mb-2">
        <label for="regionCode">Region code:</label>
        <InputSelect @bind-Value="quote.RegionCode" class="form-control" id="regionCode">
            <option value="US">US</option>
            <option value="BR">BR</option>
            <option value="AU">AU</option>
            <option value="CA">CA</option>
            <option value="FR">FR</option>
            <option value="DE">DE</option>
            <option value="HK">HK</option>
            <option value="IN">IN</option>
            <option value="IT">IT</option>
            <option value="ES">ES</option>
            <option value="GB">GB</option>
            <option value="SG">SG</option>
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary mb-2">Get Quote</button>
</EditForm>

@if (stockStats is not null)
{
    <p>Market state: @stockStats.Price.MarketState</p>

    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quote Source</th>
                <th>Regular Market Price</th>
                <th>Regular Market Change</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@stockStats.QuoteType.LongName</td>
                <td>@stockStats.Price.QuoteSourceName</td>
                <td>@stockStats.Price.ToString()</td>
                <td class="text-@(stockStats.Price.RegularMarketChangePercent.IsLoss ? "danger" : "success")">
                    <span class="oi oi-caret-@(stockStats.Price.RegularMarketChangePercent.IsLoss ? "bottom" : "top")" aria-hidden="true"></span>
                    @stockStats.Price.RegularMarketChangePercent.Fmt (@stockStats.Price.RegularMarketChange.Fmt)
                </td>
            </tr>
        </tbody>
    </table>
}

@code {
    private class StockQuote
    {
        [Required]
        public string TickerSymbol { get; set; } = null!;

        public RegionCode RegionCode { get; set; }
    }

    private StockQuote quote = null!;
    private StockStats? stockStats;

    private async Task HandleValidSubmitAsync() =>
        stockStats = await StockService.GetStatisticsAsync(
            new(quote.TickerSymbol, quote.RegionCode));

    protected override void OnInitialized() =>
        quote = new StockQuote
        {
            TickerSymbol = StockOptions.Value.TickerSymbol,
            RegionCode = StockOptions.Value.RegionCode
        };
}
